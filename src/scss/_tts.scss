.tts-interface {
  position: fixed;
  inset: 0;
  top: unset;
  z-index: 100;
  display: flex;
  justify-content: center;
  background: var(--tts-background);
  padding: 16px;

  &__controls {
    display: flex;
    gap: 3px;

    .button {
      border-radius: 0;

      span {
        letter-spacing: get_relative_clamp(-0.01, 0, 320, 375);
      }
    }

    > :first-child {
      border-radius: 2px 0 0 2px;
    }

    > :last-child {
      border-radius: 0 2px 2px 0;
    }
  }

  #tts-settings-toggle:not(:checked) {
    + div {
      .tts-interface__settings {
        display: none;
        content-visibility: hidden;
      }
    }
  }

  &__settings {
    display: flex;
    flex-direction: column;
    margin-top: 8px;
    max-width: 98vw;
    min-width: 288px;

    > div:not(:last-child) {
      margin-bottom: 8px;
    }

    > div {
      display: flex;
      align-items: center;

      > span {
        color: var(--fg-600);
        font-size: 15px;
        text-align: right;
        line-height: 1;
        padding: 0 4px 2px 0;
        margin-right: 4px;
        min-width: 64px;
      }
    }
  }

  &__range:is(input) {
    flex-grow: 1;
    margin: 0 4px 0 0;
  }

  &__number:is(input) {
    flex: 0 0 48px;
    text-align: center;
    height: 24px;
    width: 48px;
  }

  &:not(.ended).paused button.pause,
  &:not(.ended).playing button.play,
  #tts-settings-toggle:checked + div .button.settings {
    background: var(--tts-button-active-background);
    color: var(--tts-button-active-text);
  }

  .settings {
    span {
      display: none;

      @include bp(430px) {
        display: initial;
      }
    }
  }

  :is(.skip, .scroll) {
    span {
      display: none;

      @include bp(375px) {
        display: initial;
      }
    }
  }

  &__voice-selection {
    position: relative;
    justify-content: center;

    select {
      position: absolute;
      inset: 0;
      z-index: 1;
      opacity: 0;
    }

    .button {
      pointer-events: none;
      width: 100%;
    }
  }
}
